Requirements

1. As a player, I want to be able to specify the number of lines I want to play,
and bet a certain amount on them.

Example A

Given: 20 lines to be played with a bet of 5

When: A reelScreen with the following numbers is generated:

1 1 0 1 5 
7 1 0 1 5 
4 7 1 7 0

Then: The resulting reelScreen should be:

Line 3, Card 1 x4, win amount 100
Scatters 7 x3, win amount 500
Balance: 100500

and 600 should be added to the balance

2. As a developer, I want my program to predictably generate a reelScreen of reels,
given a 'generation number' (which during normal gameplay will be random)

Example A

Given: 5 reel arrays with size 30, and 15 as the generation number

When: reelScreen (reels) generation is executed with that number

Then: the generated reels should be populated with numbers from
their respective reel arrays as follows: ra[15], ra[15+1], ..., ra[15+n-1],
where 'ra' is the respective reel array, and n is the size of the reelScreen reel

Example B

Given: 5 reel arrays with size 30, and 29 as the generation number

When: reelScreen (reels) generation is executed with that number

Then: the generated reels should be populated with numbers from
their respective reel arrays as follows: ra[29], ra[0], ra[1] ..., ra[i],
where 'ra' is the respective reel array, 0<i<n, where n is the size of
the reelScreen reel.

3. As a developer, I want my program to be able to handle invalid user input,
by informing the user of his error and prompting him to try again, and to
log the information for me and other developers of the project.

Example A

Given: A prompt for the user to input the lines he wants to play, and the amount he bets

When: User input for lines played and bet amount is: aa 5

Then: The user gets this message displayed to him:

Invalid input!
Balance: [balance]| Lines available: 1-[max_lines] | Bets per lines available: 1-[max_bets]
Please enter lines you want to play on and a bet per line:

The following message is logged:

Error: Invalid user input '[input]'

Example B

Given: A prompt for the user to input the lines he wants to play, and the amount he bets

When: User input for lines played and bet amount is: 20 bb

Then: The user gets this message displayed to him:

Invalid input!
Balance: [balance]| Lines available: 1-[max_lines] | Bets per lines available: 1-[max_bets]
Please enter lines you want to play on and a bet per line:

The following message is logged:

Error: Invalid user input '[input]'

Example C

Given: A prompt for the user to input the lines he wants to play, and the amount he bets

When: User input for lines played and bet amount is: aa bb

Then: The user gets this message displayed to him:

Invalid input!
Balance: [balance]| Lines available: 1-[max_lines] | Bets per lines available: 1-[max_bets]
Please enter lines you want to play on and a bet per line:

The following message is logged:

Error: Invalid user input '[input]'

Example D

Given: A prompt for the user to input the lines he wants to play, and the amount he bets

When: User input for lines played is greater than the available lines

Then: The user gets this message displayed to him:

Invalid number of lines chosen!
Balance: [balance]| Lines available: 1-[max_lines] | Bets per lines available: 1-[max_bets]
Please enter lines you want to play on and a bet per line:

The following message is logged:

Error: Number of lines input [input amount] out of bounds for available values: 1-([max_lines])

Example E

Given: A prompt for the user to input the lines he wants to play, and the amount he bets

When: User input for lines played is less than 1

Then: The user gets this message displayed to him:

Invalid number of lines chosen!
Balance: [balance]| Lines available: 1-[max_lines] | Bets per lines available: 1-[max_bets]
Please enter lines you want to play on and a bet per line:

The following message is logged:

Error: Number of lines input [input amount] out of bounds for available values: 1-([max_lines])


Example F

Given: A prompt for the user to input the lines he wants to play, and the amount he bets

When: User input for bet amount is more than the bet limit

Then: The user gets this message displayed to him:

Invalid bet amount!
Balance: [balance]| Lines available: 1-[max_lines] | Bets per lines available: 1-[max_bets]
Please enter lines you want to play on and a bet per line:

The following message is logged:

Error: Bet amount input [input amount] out of bounds for available values: 1-([max_bets])

Example G

Given: A prompt for the user to input the lines he wants to play, and the amount he bets

When: User input for bet amount is less than 1

Then: The user gets this message displayed to him:

Invalid bet amount!
Balance: [balance]| Lines available: 1-[max_lines] | Bets per lines available: 1-[max_bets]
Please enter lines you want to play on and a bet per line:

The following message is logged:

Error: Bet amount input [input amount] out of bounds for available values: 1-([max_bets])

4. As a developer, I want my program to correctly calculate the amount a player has won,
given a reelScreen of cards generated through a specific generation number.

Example A:

Given: The player has bet on 5 lines with an amount of 10

When: The following reelScreen generates (generation number 0):

6  6  6  6  6  
6  6  6  6  6  
6  6  6  6  6 

Then: The calculated win amount should be: 50000; 50000 from lines, 0 from scatters

Example B:

Given: The player has bet on 20 lines with an amount of 10

When: The following reelScreen generates (generation number 6):

0  1  0  4  4  
0  1  0  4  4  
0  1  0  4  4 

Then: The calculated win amount should be: 0; 0 from lines, 0 from scatters

Example C:

Given: The player has bet on 10 lines with an amount of 5

When: The following reelScreen generates (generation number 12):

4  5  5  5  5  
4  5  5  5  5  
4  5  5  5  5 

Then: The calculated win amount should be: 0; 0 from lines, 0 from scatters

Example D:

Given: The player has bet on 20 lines with an amount of 5

When: The following reelScreen generates (generation number 18):

5  7  7  1  7  
5  3  3  1  1  
5  3  3  1  1 

Then: The calculated win amount should be: 500; 0 from lines, 500 from scatters

(problem extension)
5. As the project lead, I want the game to be extended with the following functionality:
- Two occurrences of card with value 6 on a line will have a win amount of 10 * bet per line
- Card 6 will be a new type of card - wildcard - which *can* act as a substitute for other cards.
If card 6 is in the beginning of a line, the win amount is the higher one of the possibilities.
(See examples for more clarity)

Example A (figures/fig-5a.txt):

Given: Player bets on 1 lines (line 0) with amount of 5

When: Generation array for reel screen is {4, 29, 29, 17, 24} (figures/fig-5a.txt)

Then: Win amount should be 100 from lines

Example B (figures/fig-5b.txt)

Given: Player bets on 1 lines (line 0) with amount of 10

When: Generation array for reel screen is {10, 20, 29, 17, 24} (figures/fig-5b.txt)

Then: Win amount should be 200 from lines

Example C (figures/fig-5c.txt)

Given: Player bets on 1 lines (line 0) with amount of 10

When: Generation array for reel screen is {0, 0, 0, 18, 9} (figures/fig-5c.txt)

Then: Win amount should be 400 from lines (see note in figure)

Example D (figures/fig-5d.txt)

Given: Player bets on 3 lines (lines 0, 1, and 2) with amount of 10

When: Generation array for reel screen is {0, 0, 0, 18, 9} (figures/fig-5d.txt)

Then: Win amount should be 1200 from lines (see note in figure)

Example E (figures/fig-5e.txt)

Given: Player bets on 1 lines (line 0) with amount of 5

When: Generation array for reel screen is {0, 0, 0, 18, 19} (figures/fig-5e.txt)

Then: Win amount should be 500 from lines

Example F (figures/fig-5f.txt)

Given: Player bets on 3 lines (lines 0, 1, and 2) with amount of 5

When: Generation array for reel screen is {0, 0, 0, 18, 19} (figures/fig-5f.txt)

Then: Win amount should be 1500 from lines

Example G (figures/fig-5g.txt)

Given: Player bets on 1 lines (line 0) with amount of 10

When: Generation array for reel screen is {0, 0, 0, 15, 19} (figures/fig-5g.txt)

Then: Win amount should be 400 from lines (see note in figure)

Example H (figures/fig-5h.txt)

Given: Player bets on 3 lines (lines 0, 1, and 2) with amount of 10

When: Generation array for reel screen is {0, 0, 0, 15, 19} (figures/fig-5h.txt)

Then: Win amount should be 1200 from lines (see note in figure)

Example I (figures/fig-5i.txt)

Given: Player bets on 1 lines (line 0) with amount of 5

When: Generation array for reel screen is {10, 0, 0, 18, 25} (figures/fig-5i.txt)

Then: Win amount should be 100 from lines

Example J (figures/fig-5j.txt)

Given: Player bets on 1 lines (line 0) with amount of 5

When: Generation array for reel screen is {3, 0, 0, 22, 25} (figures/fig-5j.txt)

Then: Win amount should be 50 from lines

Example K (figures/fig-5k.txt)

Given: Player bets on 3 lines (lines 0, 1, and 2) with amount of 5

When: Generation array for reel screen is {3, 0, 0, 22, 25} (figures/fig-5k.txt)

Then: Win amount should be 150 from lines

Example L (figures/fig-5l.txt)

Given: Player bets on 1 lines (line 0) with amount of 10

When: Generation array for reel screen is {0, 0, 3, 6, 25} (figures/fig-5l.txt)

Then: Win amount should be 400 from lines

Example M (figures/fig-5m.txt)

Given: Player bets on 3 lines (lines 0, 1, and 2) with amount of 5

When: Generation array for reel screen is {0, 0, 3, 6, 25} (figures/fig-5m.txt)

Then: Win amount should be 1200 from lines

Example N (figures/fig-5n.txt)

Given: Player bets on 1 lines (line 0) with amount of 1

When: Generation array for reel screen is {0, 0, 0, 0, 0} (figures/fig-5n.txt)

Then: Win amount should be 1000 from lines

Example O (figures/fig-5o.txt)

Given: Player bets on 3 lines (lines 0, 1, and 2) with amount of 1

When: Generation array for reel screen is {0, 0, 0, 0, 0} (figures/fig-5o.txt)

Then: Win amount should be 3000 from lines